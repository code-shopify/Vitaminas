<script>
document.addEventListener("DOMContentLoaded", function () {
  const iframes = document.querySelectorAll(".tiktok-embed");
  let lastPlayedIframe = null; // Guarda el 칰ltimo video reproducido

  // 游댃 Funci칩n para detener solo el video anterior
  function stopLastVideo() {
    if (lastPlayedIframe) {
      let src = lastPlayedIframe.getAttribute("src");
      if (src.includes("autoplay=1")) {
        lastPlayedIframe.setAttribute("src", src.replace("autoplay=1", "autoplay=0"));
      }
    }
  }

  // 游꿟 Manejo de clics en los videos
  document.querySelectorAll(".video-overlay").forEach((overlay) => {
    overlay.addEventListener("click", function (event) {
      event.preventDefault();

      // Obtener el iframe asociado al overlay
      const videoContainer = overlay.closest(".video-container");
      const iframe = videoContainer.querySelector("iframe.tiktok-embed");

      // Si el video clicado es el mismo que se est치 reproduciendo, no hacer nada
      if (iframe === lastPlayedIframe) return;

      // Detener el 칰ltimo video antes de reproducir el nuevo
      stopLastVideo();

      // Reproducir el nuevo video sin recargarlo
      let src = iframe.getAttribute("src");
      if (!src.includes("autoplay=1")) {
        iframe.setAttribute("src", src.replace("autoplay=0", "autoplay=1"));
      }

      // Ocultar el overlay del video en reproducci칩n
      overlay.style.display = "none";

      // Guardar el iframe como el 칰ltimo reproducido
      lastPlayedIframe = iframe;
    });
  });

  // 游댃 Funci칩n para mover el slider con los botones
  window.scrollSlider = function(direction) {
    const container = document.querySelector(".tiktok-carousel");
    const slide = container.querySelector(".tiktok-slide");

    if (slide) {
      const slideWidth = slide.offsetWidth + 8; // Incluye el gap entre slides
      container.scrollBy({ left: slideWidth * direction, behavior: "smooth" });
    }
  };
});
</script>
